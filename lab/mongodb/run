#!/bin/bash
kind/create

kubectl create namespace wasp

kubectl apply \
  --namespace wasp \
  --filename - <<EOF
---
apiVersion: v1
kind: Secret
metadata:
  name: mongoshell
type: Opaque
stringData:
  MONGODB_HOST:          ${MONGODB_HOST}
  MONGODB_DATABASE_NAME: ${MONGODB_DATABASE_NAME}
  MONGODB_USERNAME:      ${MONGODB_USERNAME}
  MONGODB_PASSWORD:      ${MONGODB_PASSWORD}
EOF

# mongodb shell pod
kubectl apply \
  --namespace wasp \
  --filename "deploy/pod.yaml" && \
kubectl wait pod mongoshell \
  --for condition=Ready \
  --timeout 120s \
  --namespace wasp

# nsenter container
kubectl exec mongoshell \
  --namespace wasp \
  --container nsenter \
  --stdin \
  --tty -- /bin/bash

apt-get update && apt-get install tcpdump --yes

tcpdump --snapshot-length=0 -vvv -w /capture.cap

# mongodb shell container
kubectl exec mongoshell \
  --namespace wasp \
  --container mongoshell \
  --stdin \
  --tty -- /bin/bash

/opt/mongodb/entrypoint

# copy file to localhost (stop tcpdump before run this)
kubectl --namespace wasp cp --container nsenter mongoshell:capture.cap capture.cap

# read 
tcpdump -r capture.cap
