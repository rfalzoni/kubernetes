#!/bin/bash
kind/create

kubectl create namespace wasp

kubectl apply \
  --namespace wasp \
  --filename - <<EOF
---
apiVersion: v1
kind: Secret
metadata:
  name: mongoshell
type: Opaque
stringData:
  MONGODB_HOST:          ${MONGODB_HOST}
  MONGODB_DATABASE_NAME: ${MONGODB_DATABASE_NAME}
  MONGODB_USERNAME:      ${MONGODB_USERNAME}
  MONGODB_PASSWORD:      ${MONGODB_PASSWORD}
EOF

# Define Node Name
export NODE_NAME="aks-userpool1-33333333-vmss000001"

# Create POD
envsubst < "deploy/pod.yaml" | \
kubectl apply \
  --namespace wasp \
  --filename - && \
kubectl wait pod mongoshell \
  --for condition=Ready \
  --timeout 120s \
  --namespace wasp

# kubectl debug node
# https://learn.microsoft.com/en-us/azure/aks/node-access#create-an-interactive-shell-connection-to-a-linux-node
kubectl debug node/${NODE_NAME?} \
  -it \
  --image=mcr.microsoft.com/dotnet/runtime-deps:6.0

chroot /host

# nsenter container
kubectl exec mongoshell \
  --namespace wasp \
  --container nsenter \
  --stdin \
  --tty -- /bin/bash

apt-get update && apt-get install tcpdump --yes

# host
tcpdump --snapshot-length=0 -vvv -w network.pcap

# pod
tcpdump --interface any -nn dst port 27017 -vvv -w network.pcap

# mongodb shell container
kubectl exec mongoshell \
  --namespace wasp \
  --container mongoshell \
  --stdin \
  --tty -- /bin/bash

/opt/mongodb/entrypoint

# copy file to localhost (stop tcpdump before run this)
kubectl --namespace wasp cp --container nsenter mongoshell:network.pcap network.pcap

# read 
tcpdump --number -r network.pcap

kubectl cp node-debugger-aks-userpool1-33137823-vmss000027-5l45p:"/host/network.pcap" network.pcap
