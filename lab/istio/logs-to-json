#!/bin/bash
export THIS_SCRIPT_NAME=$0
export THIS_SCRIPT_DIRECTORY=$(dirname $0)
export PATH=${PATH}:${THIS_SCRIPT_DIRECTORY}

show_usage() {
  cat <<EOF

  ${THIS_SCRIPT_NAME} \\
    --request-id anything-to-filter \\
    --source-namespace example \\
    --source-selector app=httpbin \\
    --target-namespace example \\
    --target-selector app=httpbin
EOF
}

while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do
  case $1 in
    -h | --help )
      show_usage
      exit
      ;;

    --request-id )
      shift; REQUEST_ID=$1
      ;;

    --source-namespace )
      shift; SOURCE_NAMESPACE=$1
      ;;
  
    --source-selector )
      shift; SOURCE_SELECTOR=$1
      ;;
  
    --target-namespace )
      shift; TARGET_NAMESPACE=$1
      ;;
  
    --target-selector )
      shift; TARGET_SELECTOR=$1
      ;;
  esac;
  shift;
done

if [[ "$1" == '--' ]]; then shift; fi

if [ -z "${REQUEST_ID}"       ] || \
   [ -z "${SOURCE_NAMESPACE}" ] || \
   [ -z "${SOURCE_SELECTOR}"  ] || \
   [ -z "${TARGET_NAMESPACE}" ] || \
   [ -z "${TARGET_SELECTOR}"  ]; then
  show_usage
  exit 1
fi

sleep 2

SOURCE_FILE="$(mktemp)"
TARGET_FILE="$(mktemp)"
FINAL_FILE="$(mktemp)"

kubectl logs \
  --namespace ${SOURCE_NAMESPACE} \
  --selector ${SOURCE_SELECTOR} \
  --container istio-proxy \
| grep ${REQUEST_ID} > ${SOURCE_FILE}

kubectl logs \
  --namespace ${TARGET_NAMESPACE} \
  --selector ${TARGET_SELECTOR} \
  --container istio-proxy \
| grep ${REQUEST_ID} > ${TARGET_FILE}

FILE=$(mktemp)

echo "[" > ${FILE}
jq --sort-keys . ${SOURCE_FILE} >> ${FILE}
echo "," >> ${FILE}
jq --sort-keys . ${TARGET_FILE} >> ${FILE}
echo "]" >> ${FILE}
jq . ${FILE} > ${FINAL_FILE}

cat ${FINAL_FILE}
