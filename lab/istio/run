#!/bin/bash

# Create Kind Cluser
kubectl config get-contexts kind-istio &> /dev/null || \
./kind/cluster-creation.sh && echo ""

# Configure Helm Repo
helm repo add istio https://istio-release.storage.googleapis.com/charts &> /dev/null
helm repo update istio &> /dev/null
helm search repo istio/

echo ""

# Install istio-base (CRDs)
echo "Installing istio/base..."
helm upgrade \
  --install \
  --namespace istio-system \
  --create-namespace \
  istio-base istio/base > /dev/null

# Install Istio Discovery
echo "Installing istio/istiod..."
helm upgrade \
  --install \
  --namespace istio-system \
  --create-namespace \
  istio-discovery istio/istiod \
  --wait > /dev/null

# Install Istio Ingress Gateway
echo "Installing istio/gateway..."
kubectl apply -f ./helm/istio-ingress/namespace.yaml > /dev/null

helm upgrade \
  --install \
  --namespace istio-ingress \
  istio-ingress istio/gateway \
  --values ./helm/istio-ingress/service.yaml > /dev/null

# Deploy httpbin
echo "Deploying httpbin..."
kubectl apply -f ./deployments/httpbin/namespace.yaml > /dev/null

kubectl \
  --namespace httpbin \
  apply -f deployments/httpbin/ > /dev/null && \
kubectl \
  --namespace httpbin \
  wait deployment httpbin \
  --for=condition=Available \
  --timeout=360s > /dev/null

# Print instructions
cat <<EOF
  
  watch -n 3 'kubectl -n httpbin get deploy,service,pods -o wide'

  kubectl \\
    --namespace httpbin \\
    run utils \\
    -it \\
    --rm \\
    --image=silviosilva/utils

  curl httpbin.httpbin.svc:8000/get

EOF
