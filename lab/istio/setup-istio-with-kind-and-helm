#!/bin/bash

# Create Kind Cluser
kubectl config get-contexts kind-istio &> /dev/null || \
./kind/cluster-creation.sh && echo ""

# Configure Helm Repo
helm repo add istio https://istio-release.storage.googleapis.com/charts &> /dev/null
helm repo update istio &> /dev/null
helm search repo istio/

echo ""

# Install istio-base (CRDs)
echo "Installing istio/base..."
helm upgrade \
  --install \
  --namespace "istio-system" \
  --create-namespace \
  istio-base istio/base > /dev/null

# Install Istio Discovery
echo "Installing istio/istiod..."
helm upgrade \
  --install \
  --namespace "istio-system" \
  --create-namespace \
  istio-discovery istio/istiod \
  --values "./helm/istio-discovery/mesh-config.yaml" \
  --wait > /dev/null

# Install Istio Ingress Gateway
echo "Installing istio/gateway..."
kubectl apply --filename "./helm/istio-ingress/namespace.yaml" > /dev/null

helm upgrade \
  --install \
  --namespace "istio-ingress" \
  istio-ingress istio/gateway \
  --values "./helm/istio-ingress/service.yaml" > /dev/null

# Configure Telemetry
echo "Configuring Telemetry..."
kubectl apply --filename "./deployments/telemetry.yaml" > /dev/null

# Install cert-manager
echo "Installing cert-manager..."
helm upgrade \
  --install \
  --namespace cert-manager \
  --create-namespace \
  cert-manager cert-manager/cert-manager \
  --set "installCRDs=true" > /dev/null

kubectl apply --filename "./helm/cert-manager/cluster-issuer.yaml" > /dev/null

# Install ArgoCD
echo "Installing argo-cd"
helm upgrade \
  --install \
  --namespace argocd \
  --create-namespace \
  argocd argo/argo-cd \
  --wait > /dev/null

# ArgoCD Self Signed Certificate
echo "Issuing a Self Signed Certificate..."
kubectl \
  --namespace argocd \
  apply \
  --filename "./helm/argo-cd/certificate.yaml" > /dev/null
