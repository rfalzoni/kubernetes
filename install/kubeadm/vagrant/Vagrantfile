# -*- mode: ruby -*-
# vi:set ft=ruby sw=2 ts=2 sts=2:

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'

# Define the number of master and worker nodes
# If this number is changed, remember to update setup-hosts-file.sh script with the new hosts IP details in /etc/hosts of each VM.
MASTER_NODES_COUNT = 3
WORKER_NODES_COUNT = 2

DOMAIN_NAME="example.com"
IP_NETWORK = "192.168.10."
IP_DNS = "#{IP_NETWORK}2"
MASTER_IP_START = 10
NODE_IP_START = 20
NETWORK_DEVICE_NAME = "enp0s8"

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.box_version = "20200518.1.0"
  config.vm.box_check_update = false

  # DNS
  config.vm.define "dns" do |node|
    node.vm.provider "virtualbox" do |vb|
      vb.memory = 512
      vb.cpus = 1
    end
    node.vm.hostname = "dns"
    node.vm.network :private_network, ip: "#{IP_DNS}"
    node.vm.network "forwarded_port", guest: 22, host: 2224

    node.vm.provision "setup-hosts-file", :type => "shell", :path => "ubuntu/setup-hosts-file.sh" do |s|
      s.args = ["#{NETWORK_DEVICE_NAME}","#{DOMAIN_NAME}"]
    end

    node.vm.provision "update-system-config", type: "shell", :path => "ubuntu/update-system-config.sh"
    node.vm.provision "update-system", type: "shell", :path => "ubuntu/update-system.sh"
    node.vm.provision "install-dns-server-bind9", type: "shell", :path => "ubuntu/install-dns-server-bind9.sh" do |s|
      s.args = ["#{NETWORK_DEVICE_NAME}","#{DOMAIN_NAME}","#{MASTER_IP_START}","#{MASTER_NODES_COUNT}","#{NODE_IP_START}","#{WORKER_NODES_COUNT}","#{IP_NETWORK}","#{IP_DNS}"]
    end
  end

  # Load Balancer
  config.vm.define "loadbalancer" do |node|
    node.vm.provider "virtualbox" do |vb|
      vb.memory = 512
      vb.cpus = 1
    end
    node.vm.hostname = "loadbalancer"
    node.vm.network :private_network, ip: "#{IP_NETWORK}" + "#{MASTER_IP_START}"
    node.vm.network "forwarded_port", guest: 22, host: 2225

    node.vm.provision "setup-hosts-file", :type => "shell", :path => "ubuntu/setup-hosts-file.sh" do |s|
      s.args = ["#{NETWORK_DEVICE_NAME}","#{DOMAIN_NAME}"]
    end

    node.vm.provision "update-system-config", type: "shell", :path => "ubuntu/update-system-config.sh"
    
    node.vm.provision "update-dns-config", type: "shell", :path => "ubuntu/update-dns.sh" do |s|
      s.args = ["#{IP_DNS}"]
    end

    node.vm.provision "update-system", type: "shell", :path => "ubuntu/update-system.sh"

    node.vm.provision "install-haproxy", type: "shell", :path => "ubuntu/install-haproxy.sh" do |s|
      s.args = ["#{NETWORK_DEVICE_NAME}","#{DOMAIN_NAME}","#{MASTER_IP_START}","#{MASTER_NODES_COUNT}"]
    end
 
  end

  # Master Nodes - Control Plane
  (1..MASTER_NODES_COUNT).each do |i|
      config.vm.define "master-#{i}" do |node|
        node.vm.provider "libvirt" do |vb|
          vb.memory = 2048
          vb.cpus = 2
        end
        node.vm.hostname = "master-#{i}"
        node.vm.network :private_network, ip: "#{IP_NETWORK}" + "#{MASTER_IP_START + i}"
        node.vm.network "forwarded_port", guest: 22, host: "#{2730 + i}"

        node.vm.provision "setup-hosts-file", :type => "shell", :path => "ubuntu/setup-hosts-file.sh" do |s|
          s.args = ["#{NETWORK_DEVICE_NAME}","#{DOMAIN_NAME}"]
        end

        node.vm.provision "update-system-config", type: "shell", :path => "ubuntu/update-system-config.sh"

        node.vm.provision "update-dns-config", type: "shell", :path => "ubuntu/update-dns.sh" do |s|
          s.args = ["#{IP_DNS}"]
        end

        node.vm.provision "update-system", type: "shell", :path => "ubuntu/update-system.sh"
        node.vm.provision "install-docker", type: "shell", :path => "ubuntu/install-docker.sh"

        node.vm.provision "worker-route", type: "shell", :path => "ubuntu/setup-route.sh" do |s|
          s.args = ["#{NETWORK_DEVICE_NAME}","#{DOMAIN_NAME}"]
        end
      end
  
  end

  # Worker Nodes
  (1..WORKER_NODES_COUNT).each do |i|
      config.vm.define "worker-#{i}" do |node|
        node.vm.provider "libvirt" do |vb|
          vb.memory = 2048
          vb.cpus = 2
        end

        node.vm.hostname = "worker-#{i}"
        node.vm.network :private_network, ip: "#{IP_NETWORK}" + "#{NODE_IP_START + i}"
        node.vm.network "forwarded_port", guest: 22, host: "#{2740 + i}"

        node.vm.provision "setup-hosts-file", :type => "shell", :path => "ubuntu/setup-hosts-file.sh" do |s|
          s.args = ["#{NETWORK_DEVICE_NAME}","#{DOMAIN_NAME}"]
        end

        node.vm.provision "update-system-config", type: "shell", :path => "ubuntu/update-system-config.sh"

        node.vm.provision "update-dns-config", type: "shell", :path => "ubuntu/update-dns.sh" do |s|
          s.args = ["#{IP_DNS}"]
        end

        node.vm.provision "update-system", type: "shell", :path => "ubuntu/update-system.sh"
        node.vm.provision "install-docker", type: "shell", :path => "ubuntu/install-docker.sh"
        
        node.vm.provision "worker-route", type: "shell", :path => "ubuntu/setup-route.sh" do |s|
          s.args = ["#{NETWORK_DEVICE_NAME}","#{DOMAIN_NAME}"]
        end
      end
  
  end
  
end
